" note: map <Action>(ActionID) would apply to select mode as well as normal mode; may prefer nnoremap.

" when vimrc source fails on some wonky updates:
" source ~/.dotfiles/ideavim_temporary_source.vim
source ~/.vimrc

" vim-style undo
set nooldundo

" replicating unsupported vim commands with keymaps {{{

" unfortunately vim's changelist is simply not implemented in intellij / ideavim, at least not the same way

" JumpToLastChange seems to randomly remember some of the edit locations in
" the current file, then if you keep going back it will eventually bring you
" to another file you edited
" nnoremap g; :action JumpToLastChange<Enter>
map g; <Action>(JumpToLastChange)
" nnoremap g, :action JumpToNextChange<Enter>
map g, <Action>(JumpToNextChange)
" nnoremap <Space> :action JumpToLastChange<Enter>
map <Space> <Action>(JumpToLastChange)
" nnoremap <S-Space> :action JumpToNextChange<Enter>
map <S-Space> <Action>(JumpToNextChange)

" git diff view - doesn't work for some reason
" even when typing in intellij vim normal mode: ":action PreviousDiff" doesn't work
" even though when tracking action id, that's the action ID that shows up
" see https://youtrack.jetbrains.com/issue/VIM-1611/actions-related-to-resolving-conflicts-doesnt-seem-to-work
" so just modify the "Next/Previous Difference" in intellij settings keymap
" mapped to command + [ + c and command + ] + c
nnoremap [c :action PreviousDiff<Enter>
nnoremap ]c :action NextDiff<Enter>

" note that doing :action GotoNextBookmark<Enter> in IntelliJ won't set the automatic mark ` where you're jumping from,
" so you can't do `` to go back after doing ]` like you can in vim, if you just did GoTo... 
" and that m` in normal mode won't override the automatic ` -- but the ex-command `:mark <>` can.
nnoremap ]` :mark` \| :action GotoNextBookmark<Enter>
nnoremap [` :mark` \| :action GotoPreviousBookmark<Enter>
" in vim, this moves a split to a new tab
map <C-w>T <Action>(Unsplit)
" maps to window moving in vim:
nnoremap <C-w>W :action MoveEditorToOppositeTabGroup<Enter>
nnoremap <C-w>H :action MoveEditorToOppositeTabGroup<Enter>
nnoremap <C-w>L :action MoveEditorToOppositeTabGroup<Enter>
nnoremap <C-w>J :action MoveEditorToOppositeTabGroup<Enter>
nnoremap <C-w>K :action MoveEditorToOppositeTabGroup<Enter>
" }}}

" macro: ex-commands stored in registers - most already in vimrc {{{
" the command for deleting all java comment-only lines (has this in vim but
" needs to write this again for ideavim)
let @c= 'g/\v^\s*\/\//d'
"}}}

" regarding abbreviataion, convert indents {{{
" abbreviations are not yet supported by ideaVim.
" cnoreabbrev retab! action ConvertIndentsToTabs
" cnoreabbrev retab action ConvertIndentsToSpaces
" for some reason ! in ex-command mode is not recognized by ideavim
" cnoremap ret! action ConvertIndentsToTabs
" but hey! that's all right. once you set the default indentation to using tabs for Java in IntelliJ,
" doing command option L to reformat will automatically convert all space indents to tab indents.
" }}}
